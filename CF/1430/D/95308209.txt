#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long long int lli;
typedef vector<ll> vl;

#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define SQR(x) ((x) * (x))

#define loop(i, y) for (int i = 0; i < int(y); i++)
#define FOR(i, x, y) for (int i = int(x); i <= int(y); i++)
#define ROF(i, y, x) for (int i = int(y); i >= int(x); i--)

#define ALL(c) c.begin(), c.end()
#define CLR(x, y) memset(x, y, sizeof(x))

#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)

#define si(x) scanf("%d", &x)
#define sii(x, y) scanf("%d %d", &x, &y)
#define siii(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define sl(x) scanf("%lld", &x)
#define sll(x, y) scanf("%lld %lld", &x, &y)
#define slll(x, y, z) scanf("%lld %lld %lld", &x, &y, &z)
#define sllll(a, b, c, d) scanf("%lld %lld %lld %lld", &a, &b, &c, &d)

#define FileIO  freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define FastIO  ios::sync_with_stdio(false); cin.tie(0);

#define FixedPrecision(x) ios::sync_with_stdio(false);cout.setf(ios::fixed); cout.precision(x);cin.tie(0);
#define bitCheck(N, in) ((bool)(N & (1LL << (in))))
#define bitOff(N, in) (N & (~(1LL << (in))))
#define bitOn(N, in) (N | (1LL << (in)))
#define bitFlip(a, k) (a ^ (1LL << (k)))

#define start_time clock_t tStart = clock();
#define execution_time printf("\n>>Time taken: %.10fs\n", (double)(clock() - tStart) / CLOCKS_PER_SEC);

#define popCount(x) __builtin_popcount(x)
#define int2Bin(x, y); bitset<y> z = x; cout << z.to_string() << endl;
#define tr(it, container) for (auto it = container.begin(); it != container.end(); it++)
#define unq(v) (v).erase(unique(ALL(v)), v.end())
#define common(a, b) sort(ALL(a)), sort(ALL(b)), a.erase(set_intersection(ALL(a), ALL(b), a.begin()), a.end())
#define uncommon(a, b) sort(ALL(a)), sort(ALL(b)), a.erase(set_symmetric_difference(ALL(a), ALL(b), a.begin()), a.end())

#define DB(x) cout << #x << " = " << x << endl
#define DDB(x, y) cout << #x << " = " << x << "   " << #y << " = " << y << endl
#define DDDB(x, y, z) cout << #x << " = " << x << "   " << #y << " = " << y << "   " << #z << " = " << z << endl
#define TE(t, n) cout << "Case " << t << ": " << n << endl;

#ifndef ONLINE_JUDGE
    #define debug(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template < typename Arg1 >
    void __f(const char* name, Arg1&& arg1){
        cout << name << " = " << arg1 << std::endl;
    }
    template < typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names, ',');
        cout.write(names, comma - names) << " = " << arg1 <<" | ";
        __f(comma+1, args...);
    }
#else
    #define debug(...)
#endif


/// Constants

#define MAXN 1000005
#define MAX 200005
#define MOD 1000000007
#define BASE 1000000009
#define eps 1e-9
#define INF 1llu << 61 // 2,305,843,009,213,693,952
#define inf 1 << 29    // 536,870,912
#define PI acos(-1.0)  // 3.1415926535897932
#define E 2.71828182845904523536




int main()
{

#ifndef ONLINE_JUDGE
    start_time
        FileIO
#endif

    

    ll t = 0;cin >> t;
 
    while(t--)
    {
        ll n ; sl(n);
        string s; cin >> s;
 
        map < int , int > fmp;

        int c = 1;
        int in = 0;
 
        vector < pair < char , int > > vp;
 
        for(int i = 1 ; i < n ; i ++){
            if(s[i]!=s[i-1]){
                fmp[in]=c;
                vp.pb(mp(s[in],in));
                in = i;
                c = 1;
            }else c++;
        }
        vp.pb(mp(s[in],in));
        fmp[in]=c;
 
        int ans = 0 ;
 

        int sz = vp.size();
 
        auto it = fmp.begin();
 
        for(int i =  0 ; i < sz; i ++)
        {
            ans ++;
            if( fmp[ vp[i].ss ] > 1 )fmp [ vp[i].ss ] = 1;
            else{
                while( it!=fmp.end() && it->ss <= 1 )++it;
                if(it->ss > 1 && it != fmp.end())(it->ss)--;
                else i++;
            }
        }
        cout << ans << endl;
 
    }




#ifndef ONLINE_JUDGE
    execution_time
#endif

        return 0;
}